% prolog

train_prefix('{self_address:L} ').

train_ner (en, human, HUMAN, LABEL) :- wdpdInstanceOf(HUMAN, wdeHuman), rdfsLabel(HUMAN, en, LABEL).
train_ner (de, human, HUMAN, LABEL) :- wdpdInstanceOf(HUMAN, wdeHuman), rdfsLabel(HUMAN, de, LABEL).

macro(en, known_humans, LABEL) :- 
    wdpdInstanceOf(HUMAN, wdeHuman),
    rdfsLabel(HUMAN, en, LABEL).
 
macro(de, known_humans, LABEL) :- 
    wdpdInstanceOf(HUMAN, wdeHuman),
    rdfsLabel(HUMAN, de, LABEL).
 
% this is meant to be overloaded by other modules (i.e. politics) to 
% produce better, higher-scoring answer (e.g. "isn't he a US president?")
answer_info_human(C, en, HUMAN) :-
    if is_male(HUMAN) then
        or (say(C, "His name sounds familiar."),
            say(C, "Would you like to know more about him?"))
    else
        or (say(C, "Her name sounds familiar."),
            say(C, "Would you like to know more about her?"))
    endif.
answer_info_human(C, de, HUMAN) :-
    if is_male(HUMAN) then
        or (say(C, "Der Name kommt mir bekannt vor."),
            say(C, "Möchtest Du mehr über ihn wissen?"))
    else
        or (say(C, "Der Name kommt mir bekannt vor."),
            say(C, "Möchtest Du mehr über sie wissen?"))
    endif.

train(en) :-
    "(do you know | do you happen to know) {known_humans:LABEL}",

    ner (en, human, tstart(known_humans), tend(known_humans), C:tokens, ENTITY, SCORE),

    C:mem|f1ent is ENTITY,
    r_score(C, SCORE),

    answer_info_human (C, en, ENTITY).

train(de) :-
    "(kennst du|kennst du eigentlich) {known_humans:LABEL}",

    ner (de, human, tstart(known_humans), tend(known_humans), C:tokens, ENTITY, SCORE),

    C:mem|f1ent is ENTITY,
    r_score(C, SCORE),

    answer_info_human (C, de, ENTITY).
 
test(de, t0000) :-
    "Kennst Du Angela Merkel?",
    "Der Name kommt mir bekannt vor.".

test(en, t0001) :-
    "Do you know Angela Merkel?",
    "Would you like to know more about her?".

train(en) :-
    "(what about | who is | what is) {known_humans:LABEL}",

    ner (en, human, tstart(known_humans), tend(known_humans), C:tokens, ENTITY, SCORE),

    C:mem|f1ent is ENTITY,
    r_score(C, SCORE),

    answer_info_human (C, en, ENTITY).

train(de) :-
    "(wer ist|wer ist eigentlich|was ist mit|was ist eigentlich mit|was weisst du über|was weisst du eigentlich über) {known_humans:LABEL}",

    ner (de, human, tstart(known_humans), tend(known_humans), C:tokens, ENTITY, SCORE),

    C:mem|f1ent is ENTITY,
    r_score(C, SCORE),

    answer_info_human (C, de, ENTITY).

test(de, t0002) :-
    "Wer ist Angela Merkel?",
    "Möchtest Du mehr über sie wissen?".

test(en, t0003) :-
    "What about Angela Merkel?",
    "Her name sounds familiar.".

%
% birthplace
%

answer_human_born_where_tokens(en, TS, TE) :-

    ner (en, human, TS, TE, C:tokens, HUMAN, SCORE),

    C:mem|f1ent is HUMAN,
    r_score(C, SCORE),

    rdfsLabel(HUMAN, en, HLABEL),

    wdpdPlaceOfBirth(HUMAN, BP),
    C:mem|f1place is BP,
    rdfsLabel(BP, en, BPLABEL),

    or ("{HLABEL,s} was born in {BPLABEL,s}, I think.",
        "I believe {HLABEL,s} was born in {BPLABEL,s}.").

answer_human_born_where_tokens(de, TS, TE) :-

    ner (de, human, TS, TE, C:tokens, HUMAN, SCORE),

    C:mem|f1ent is HUMAN,
    r_score(C, SCORE),

    rdfsLabel(HUMAN, de, HLABEL),

    wdpdPlaceOfBirth(HUMAN, BP),
    C:mem|f1place is BP,
    rdfsLabel(BP, de, BPLABEL),

    or ("{HLABEL,s} ist in {BPLABEL,s} geboren, denke ich.",
        "Ich glaube {HLABEL,s} ist in {BPLABEL,s} geboren.").

train(en) :-
    "(where|in which town|in which city) (was|is) {known_humans:LABEL} born?",
    inline answer_human_born_where_tokens(en, tstart(known_humans), tend(known_humans)).

train(de) :-
    "(wo|in welcher stadt) (wurde|ist) (eigentlich|) {known_humans:LABEL} geboren?",
    inline answer_human_born_where_tokens(de, tstart(known_humans), tend(known_humans)).

train(en) :-
    "which is (the birthplace|place of birth) of {known_humans:LABEL}?",
    inline answer_human_born_where_tokens(en, tstart(known_humans), tend(known_humans)).

train(de) :-
    "welches ist (eigentlich|) (der Geburtsort|die Geburtsstadt) von {known_humans:LABEL}?",
    inline answer_human_born_where_tokens(de, tstart(known_humans), tend(known_humans)).


answer_human_born_where_context(en) :-

    mem(C, f1ent, HUMAN),

    rdfsLabel(HUMAN, en, HLABEL),

    wdpdPlaceOfBirth(HUMAN, BP),
    C:mem|f1place is BP,
    rdfsLabel(BP, en, BPLABEL),

    or ("{HLABEL,s} was born in {BPLABEL,s}, I think.",
        "I believe {HLABEL,s} was born in {BPLABEL,s}.").

answer_human_born_where_context(de) :-

    mem(C, f1ent, HUMAN),

    rdfsLabel(HUMAN, de, HLABEL),

    wdpdPlaceOfBirth(HUMAN, BP),
    C:mem|f1place is BP,
    rdfsLabel(BP, de, BPLABEL),

    or ("{HLABEL,s} ist in {BPLABEL,s} geboren, denke ich.",
        "Ich glaube {HLABEL,s} ist in {BPLABEL,s} geboren.").


train(en) :-
    "(and|) (where|in which town|in which city) (was|is) (she|he) born (again|)?",
    inline answer_human_born_where_context(en).

train(de) :-
    "(und|) (wo|in welcher stadt) (wurde|ist) (eigentlich|) (er|sie) (nochmal|) geboren?",
    inline answer_human_born_where_context(de).

train(en) :-
    "(and|) which is (the birthplace|place of birth) of (him|her) (again|)?",
    inline answer_human_born_where_context(en).

train(de) :-
    "(und|) welches ist (eigentlich|nochmal|) (der Geburtsort|die Geburtsstadt) von (ihm|ihr)?",
    inline answer_human_born_where_context(de).
 
test(en, t0004) :-
    "Where was Angela Merkel born?",
    "Angela Merkel was born in Barmbek-Nord, I think.",
    "What were we talking about?",
    "Didn't we talk about angela merkel?",
    "And where was she born again?",
    "I believe Angela Merkel was born in Barmbek-Nord".

test(de, t0005) :-
    "Wo wurde Angela Merkel geboren?",
    "Angela Merkel ist in Barmbek-Nord geboren, denke ich",
    "Welches Thema hatten wir?",
    "Sprachen wir nicht über Angela Merkel?",
    "Und wo wurde sie nochmal geboren?",
    "Angela Merkel ist in Barmbek-Nord geboren, denke ich".

%
% birthdate
%

answer_human_born_when_tokens(en, TS, TE) :-

    ner (en, human, TS, TE, C:tokens, HUMAN, SCORE),

    C:mem|f1ent is HUMAN,
    r_score(C, SCORE),

    rdfsLabel(HUMAN, en, HLABEL),

    wdpdDateOfBirth(HUMAN, BD),
    C:mem|f1time is BD,
    transcribe_date(en, dativ, BD, BDLABEL),

    or ("{HLABEL,s} was born on {BDLABEL,s}, I think.",
        "I believe {HLABEL,s} was born on {BDLABEL,s}.").

answer_human_born_when_tokens(de, TS, TE) :-

    ner (de, human, TS, TE, C:tokens, HUMAN, SCORE),

    C:mem|f1ent is HUMAN,
    r_score(C, SCORE),

    rdfsLabel(HUMAN, de, HLABEL),

    wdpdDateOfBirth(HUMAN, BD),
    C:mem|f1time is BD,
    transcribe_date(de, dativ, BD, BDLABEL),

    or ("{HLABEL,s} ist am {BDLABEL,s} geboren, denke ich.",
        "Ich glaube {HLABEL,s} ist am {BDLABEL,s} geboren.").

train(en) :-
    "(when|in which year) (was|is) {known_humans:LABEL} born?",
    inline answer_human_born_when_tokens(en, tstart(known_humans), tend(known_humans)).

train(de) :-
    "(wann|in welchem Jahr) (wurde|ist) (eigentlich|) {known_humans:LABEL} geboren?",
    inline answer_human_born_when_tokens(de, tstart(known_humans), tend(known_humans)).

train(en) :-
    "(when is|on what day is) {known_humans:LABEL}S birthday?",
    inline answer_human_born_when_tokens(en, tstart(known_humans), tend(known_humans)).

train(de) :-
    "(wann hat|an welchem Tag hat) (eigentlich|) {known_humans:LABEL} Geburtstag?",
    inline answer_human_born_when_tokens(de, tstart(known_humans), tend(known_humans)).

answer_human_born_when_context(en) :-

    mem(C, f1ent, HUMAN),

    rdfsLabel(HUMAN, en, HLABEL),

    wdpdDateOfBirth(HUMAN, BD),
    C:mem|f1time is BD,
    transcribe_date(en, dativ, BD, BDLABEL),

    or ("{HLABEL,s} was born on {BDLABEL,s}, I think.",
        "I believe {HLABEL,s} was born on {BDLABEL,s}.").

answer_human_born_when_context(de) :-

    mem(C, f1ent, HUMAN),

    rdfsLabel(HUMAN, de, HLABEL),

    wdpdDateOfBirth(HUMAN, BD),
    C:mem|f1time is BD,
    transcribe_date(de, dativ, BD, BDLABEL),

    or ("{HLABEL,s} ist am {BDLABEL,s} geboren, denke ich.",
        "Ich glaube {HLABEL,s} ist am {BDLABEL,s} geboren.").

train(en) :-
    "(and|) (when|in which year) (was|is) (he|she) born (again|)?",
    inline answer_human_born_when_context(en).

train(de) :-
    "(und|) (wann|in welchem Jahr) (wurde|ist) (eigentlich|) (sie|er) (nochmal|) geboren?",
    inline answer_human_born_when_context(de).

test(en, t0006) :-
    "When was Angela Merkel born?",
    "I believe Angela Merkel was born on July 17, 1954.",
    "What were we talking about?",
    "Didn't we talk about angela merkel?",
    "And when was she born?",
    "I believe Angela Merkel was born on July 17, 1954.",
    "And where was she born again?",
    "I believe Angela Merkel was born in Barmbek-Nord".

test(de, t0007) :-
    "Wann wurde Angela Merkel geboren?",
    "Ich glaube Angela Merkel ist am siebzehnten Juli 1954 geboren.",
    "Welches Thema hatten wir?",
    "Sprachen wir nicht über Angela Merkel?",
    "Und wann wurde sie nochmal geboren?",
    "Ich glaube Angela Merkel ist am siebzehnten Juli 1954 geboren.",
    "Und wo wurde sie nochmal geboren?",
    "Angela Merkel ist in Barmbek-Nord geboren, denke ich".

