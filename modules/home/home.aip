% prolog

%
% a (pretty simple minded at this point) home automation example module
%

train_prefix('{self_address:L} ').

aiHomeLocation (aiHLLivingRoom).
rdfsLabel (aiHLLivingRoom, en, "living room").
aiPrepLoc (aiHLLivingRoom, en, "in the").
rdfsLabel (aiHLLivingRoom, de, "Wohnzimmer").
aiPrepLoc (aiHLLivingRoom, de, "im").

aiHomeLocation (aiHLStudy).
rdfsLabel (aiHLStudy, en, "study").
aiPrepLoc (aiHLStudy, en, "in the").
rdfsLabel (aiHLStudy, de, "Arbeitszimmer").
aiPrepLoc (aiHLStudy, de, "im").

aiHomeLocation (aiHLDiningRoom).
rdfsLabel (aiHLDiningRoom, en, "dining room").
aiPrepLoc (aiHLDiningRoom, en, "in the").
rdfsLabel (aiHLDiningRoom, de, "Esszimmer").
aiPrepLoc (aiHLDiningRoom, de, "im").

aiHomeLocation (aiHLBedroom).
rdfsLabel (aiHLBedroom, en, "bedroom").
aiPrepLoc (aiHLBedroom, en, "in the").
rdfsLabel (aiHLBedroom, de, "Schlafzimmer").
aiPrepLoc (aiHLBedroom, de, "im").

aiHomeLocation (aiHLKitchen).
rdfsLabel (aiHLKitchen, en, "kitchen").
aiPrepLoc (aiHLKitchen, en, "in the").
rdfsLabel (aiHLKitchen, de, "Küche").
aiPrepLoc (aiHLKitchen, de, "in der").

aiHomeLocation (aiHLBathroom).
rdfsLabel (aiHLBathroom, en, "bathroom").
aiPrepLoc (aiHLBathroom, en, "in the").
rdfsLabel (aiHLBathroom, de, "Badezimmer").
aiPrepLoc (aiHLBathroom, de, "im").

aiHomeLocation (aiHLChildrensRoom).
rdfsLabel (aiHLChildrensRoom, en, "children's room").
aiPrepLoc (aiHLChildrensRoom, en, "in the").
rdfsLabel (aiHLChildrensRoom, de, "Kinderzimmer").
aiPrepLoc (aiHLChildrensRoom, de, "im").

aiHomeLocation (aiHLGuestRoom).
rdfsLabel (aiHLGuestRoom, en, "guest room").
aiPrepLoc (aiHLGuestRoom, en, "in the").
rdfsLabel (aiHLGuestRoom, de, "Gästezimmer").
aiPrepLoc (aiHLGuestRoom, de, "im").

aiHomeLocation (aiHLWorkRoom).
rdfsLabel (aiHLWorkRoom, en, "work room").
aiPrepLoc (aiHLWorkRoom, en, "in the").
rdfsLabel (aiHLWorkRoom, de, "Arbeitszimmer").
aiPrepLoc (aiHLWorkRoom, de, "im").

aiHomeLocation (aiHLHall).
rdfsLabel (aiHLHall, en, "hall").
aiPrepLoc (aiHLHall, en, "in the").
rdfsLabel (aiHLHall, de, "Flur").
aiPrepLoc (aiHLHall, de, "im").

aiHomeLocation (aiHLOffice).
rdfsLabel (aiHLOffice, en, "office").
aiPrepLoc (aiHLOffice, en, "in the").
rdfsLabel (aiHLOffice, de, "Büro").
aiPrepLoc (aiHLOffice, de, "im").

aiHomeLocation (aiHLBasement).
rdfsLabel (aiHLBasement, en, "basement").
rdfsLabel (aiHLBasement, en, "cellar").
aiPrepLoc (aiHLBasement, en, "in the").
rdfsLabel (aiHLBasement, de, "Keller").
aiPrepLoc (aiHLBasement, de, "im").

aiHomeLocation (aiHLAttic).
rdfsLabel (aiHLAttic, en, "attic").
aiPrepLoc (aiHLAttic, en, "in the").
rdfsLabel (aiHLAttic, de, "Dachboden").
aiPrepLoc (aiHLAttic, de, "auf dem").

aiHomeLocation (aiHLUpstairs).
rdfsLabel (aiHLUpstairs, en, "upstairs").
aiPrepLoc (aiHLUpstairs, en, "").
rdfsLabel (aiHLUpstairs, de, "Obergeschoss").
aiPrepLoc (aiHLUpstairs, de, "im").

aiHomeLocation (aiHLShop).
rdfsLabel (aiHLShop, en, "shop").
aiPrepLoc (aiHLShop, en, "in the").
rdfsLabel (aiHLShop, de, "Laden").
aiPrepLoc (aiHLShop, de, "im").

aiHomeLocation (aiHLWorkshop).
rdfsLabel (aiHLWorkshop, en, "workshop").
aiPrepLoc (aiHLWorkshop, en, "in the").
rdfsLabel (aiHLWorkshop, de, "Werkstatt").
aiPrepLoc (aiHLWorkshop, de, "in der").

train_ner (en, home_location, HOME_LOCATION, LABEL) :- aiHomeLocation(HOME_LOCATION), rdfsLabel(HOME_LOCATION, en, LABEL).
train_ner (de, home_location, HOME_LOCATION, LABEL) :- aiHomeLocation(HOME_LOCATION), rdfsLabel(HOME_LOCATION, de, LABEL).

macro(en, home_locations, LABEL, PL) :- aiHomeLocation(HOME_LOCATION), rdfsLabel(HOME_LOCATION, en, LABEL), aiPrepLoc(HOME_LOCATION, en, PL).
macro(de, home_locations, LABEL, PL) :- aiHomeLocation(HOME_LOCATION), rdfsLabel(HOME_LOCATION, de, LABEL), aiPrepLoc(HOME_LOCATION, de, PL).

macro(en, light_actions, LABEL, ACTION) :- LABEL is 'on',  ACTION is on.
macro(en, light_actions, LABEL, ACTION) :- LABEL is 'off', ACTION is off.

macro(de, light_actions, LABEL, ACTION) :- LABEL is 'an',  ACTION is on.
macro(de, light_actions, LABEL, ACTION) :- LABEL is 'ein', ACTION is on.
macro(de, light_actions, LABEL, ACTION) :- LABEL is 'aus', ACTION is off.

turn_lights_tokens(en, TS, TE, LACTION) :-
    ner (en, home_location, TS, TE, C:tokens, HOME_LOCATION, SCORE),
    C:mem|f1loc := HOME_LOCATION,
    r_score(C, SCORE),
    r_action(C, [lights, LACTION, HOME_LOCATION]).

turn_lights_tokens(de, TS, TE, LACTION) :-
    ner (de, home_location, TS, TE, C:tokens, HOME_LOCATION, SCORE),
    C:mem|f1loc := HOME_LOCATION,
    r_score(C, SCORE),
    r_action(C, [lights, LACTION, HOME_LOCATION]).

train(en) :-
    "(please|) (switch|turn|dim) {light_actions:LABEL} the lights {home_locations:PL} {home_locations:LABEL}",
    inline turn_lights_tokens(en, tstart(home_locations, 1), tend(home_locations, 1), mvar(light_actions, action)).

train(de) :-
    "(bitte|) (schalte|mach) (bitte|) (mal|) das Licht {home_locations:PL} {home_locations:LABEL} {light_actions:LABEL}",
    inline turn_lights_tokens(de, tstart(home_locations, 1), tend(home_locations, 1), mvar(light_actions, action)).

test(en, t0000) :-
    'computer, please switch on the lights in the living room',
    '',
    action(lights, on, aiHLLivingRoom).
test(de, t0001) :-
    'Computer, bitte schalte das Licht in der Werkstatt ein',
    '',
    action(lights, on, aiHLWorkshop).

test(en, t0004) :-
    'computer, please switch off the lights in the dining room',
    '',
    action(lights, off, aiHLDiningRoom).
test(de, t0005) :-
    'Computer, schalte mal das Licht im Schlafzimmer aus',
    '',
    action(lights, off, aiHLBedroom).

train(en) :-
    "(please|) lights {light_actions:LABEL} {home_locations:PL} {home_locations:LABEL}",
    inline turn_lights_tokens(en, tstart(home_locations, 1), tend(home_locations, 1), mvar(light_actions, action)).

train(de) :-
    "(bitte|) Licht {light_actions:LABEL} {home_locations:PL} {home_locations:LABEL}",
    inline turn_lights_tokens(de, tstart(home_locations, 1), tend(home_locations, 1), mvar(light_actions, action)).

test(en, t0002) :-
     'computer, lights on in the kitchen',
     '',
     action(lights, on, aiHLKitchen).
test(de, t0003) :-
     'Licht an im Keller',
     '',
     action(lights, on, aiHLBasement).

turn_lights_context(LACTION) :-

    if nonvar(C:mem|f1loc) then
        HOME_LOCATION is C:mem|f1loc
    else
        HOME_LOCATION is aiHLLivingRoom
    endif,

    C:mem|f1loc := HOME_LOCATION,

    r_action(C, [lights, LACTION, HOME_LOCATION]).

train(en) :-
    "(please|) lights {light_actions:LABEL} (please|)",
    inline turn_lights_context(mvar(light_actions, action)).
train(de) :-
    "(bitte|) Licht {light_actions:LABEL} (bitte|)",
    inline turn_lights_context(mvar(light_actions, action)).

train(en) :-
    "(please|) (switch|turn|dim) {light_actions:LABEL} the lights",
    inline turn_lights_context(mvar(light_actions, action)).
train(de) :-
    "(bitte|) (schalte|mach) (bitte|) (mal|) das Licht {light_actions:LABEL}",
    inline turn_lights_context(mvar(light_actions, action)).

test(en, t0006) :-
     'computer lights on',
     '',
     action(lights, on, aiHLLivingRoom),
     'switch on the lights in the attic',
     '',
     action(lights, on, aiHLAttic),
     'please turn off the lights',
     '',
     action(lights, off, aiHLAttic).

test(de, t0007) :-
     'computer licht an',
     '',
     action(lights, on, aiHLLivingRoom),
     'schalte das licht auf dem dachboden ein',
     '',
     action(lights, on, aiHLAttic),
     'bitte schalte das licht aus',
     '',
     action(lights, off, aiHLAttic).

